{"version":3,"sources":["components/layout.js","utils/state.js","components/Error.js","components/Login/Login.js","utils/api.js","components/Login/SignUp.js","components/Login/Forgot.js","components/Admin/Card.js","components/Welcome.js","components/Admin/Admin.js","App.js","utils/hooks.js","index.js"],"names":["Layout","children","data","Helmet","title","meta","name","content","lang","style","margin","maxWidth","padding","paddingTop","loggedInUserData","atom","key","default","sub","email_verified","phone_number_verified","email","username","token","navigation","items","rows","modal","translated","UserNotFoundException","AuthError","CodeMismatchException","NotAuthorizedException","UsernameExistsException","PasswordNotMatch","InvalidParameterException","Empty","Error","props","Object","entries","map","val","description","message","type","styles","Input","height","width","formContainer","display","flexDirection","button","backgroundColor","cursor","textAlign","marginBottom","buttonText","color","Login","useRecoilState","user","setUser","useState","setUsername","password","setPassword","error","setError","nav","setNav","useEffect","login","a","Auth","signIn","currentAuthenticatedUser","user1","currentSession","session","userInfo","attributes","accessToken","jwtToken","refreshtoken","refreshToken","localStorage","setItem","JSON","stringify","x","errorMessage","onChange","event","target","value","placeholder","InputCompact","buttonCompact","onClick","env","api","heartbeat","axios","get","headers","accesstoken","result","Promise","resolve","put","json","post","register","SignUp","authCode","stage","state","setState","handleUpdate","signUp","console","log","confirmSignUp","tip","vreme","Date","getTime","href","Forgot","validation","confirmPassword","forgotPassword","submitCode","changePassword","forgotPasswordSubmit","role","tabIndex","onKeyDown","Meta","Card","Tweet","avatar","src","Welcome","useQuery","gql","loading","Post","item","Form","edit","fields","setFields","open","setOpen","useForm","control","errors","handleSubmit","setValue","task","onSubmit","newData","newProjects","Items","p","as","TextField","id","label","variant","defaultValue","rules","required","htmlType","Admin","visible","onCancel","httpLink","HttpLink","uri","Amplify","configure","aws_project_region","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","oauth","App","useRecoilValue","initialValue","window","getItem","parse","storedValue","setStoredValue","valueToStore","Function","useLocalStorage","dark","setDark","client","ApolloClient","link","cache","InMemoryCache","logout","signOut","prevStorage","userStorage","heartbeatGo","cognitoUser","refreshSession","err","userSession","interval","setInterval","clearInterval","className","alt","selectedKeys","mode","Item","to","defaultChecked","path","menu","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a394a7ad.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\nimport \"../css/main.css\";\n\nconst Layout = ({ children, data }) => (\n  <>\n    <Helmet\n      title={\"title\"}\n      meta={[\n        { name: \"description\", content: \"Sample\" },\n        { name: \"keywords\", content: \"sample, something\" },\n      ]}\n    >\n      <html lang=\"en\" />\n    </Helmet>\n\n    <div\n      style={{\n        margin: \"0 auto\",\n        maxWidth: 960,\n        padding: \"0px 1.0875rem 1.45rem\",\n        paddingTop: 0,\n      }}\n    >\n      {children}\n    </div>\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import { atom } from 'recoil';\n\nexport const loggedInUserData = atom({\n  key: 'loggedInUser',\n  default: {\n    sub: null,\n    email_verified: null,\n    phone_number_verified: null,\n    email: null,\n    username: null,\n    token: null,\n  },\n});\n\nexport const navigation = atom({\n  key: 'navigation',\n  default: 'home',\n});\n\nexport const items = atom({\n  key: 'items',\n  default: { rows: [] },\n});\nexport const modal = atom({\n  key: 'modal',\n  default: false,\n});\n","import React from 'react';\nimport { Alert } from 'antd';\n\nconst translated = {\n  UserNotFoundException: 'потребителя не съществува',\n  AuthError: 'потребител и парола не могат да бъдат празни',\n  CodeMismatchException: 'невалиден код, моля пробвайте отново',\n  NotAuthorizedException: 'потребител или парола невалидни',\n  UsernameExistsException: 'потребителя не съществува',\n  PasswordNotMatch: 'паролите не пасват',\n  InvalidParameterException: 'паролата трябва да е поне 6 символа',\n  Empty: '',\n};\n\nconst Error = (props) => (\n  <div>\n    {Object.entries(props).map(([err, val]) => val.name !== 'Empty' && (\n    <Alert\n      description={\n          translated[val.name]\n            ? translated[val.name]\n            : `${val.message}-${val.name}`\n        }\n      type=\"error\"\n    />\n    ))}\n  </div>\n);\n\nexport default Error;\n","import React, { useState, useEffect } from 'react';\n\nimport { Auth } from 'aws-amplify';\nimport { useRecoilState } from 'recoil';\nimport { Input } from 'antd';\n\nimport { loggedInUserData, navigation } from '../../utils/state';\nimport Error from '../Error';\n\n//\n\nconst styles = {\n  Input: {\n    height: 40,\n    margin: '10px 0px',\n    padding: 7,\n    width: '100%',\n  },\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  button: {\n    backgroundColor: 'rebeccapurple',\n    padding: '15px 7px',\n    cursor: 'pointer',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: 'white',\n  },\n};\nconst Login = ({ type }) => {\n  const [user, setUser] = useRecoilState(loggedInUserData);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [nav, setNav] = useRecoilState(navigation);\n  useEffect(() => {\n    setNav('login');\n  }, [setNav, nav]);\n  const login = async () => {\n    try {\n      await Auth.signIn(username, password);\n      const user1 = await Auth.currentAuthenticatedUser();\n      const session = await Auth.currentSession();\n\n      const userInfo = {\n        ...user1.attributes,\n        username: user1.username,\n        token: session.accessToken.jwtToken,\n        refreshtoken: session.refreshToken.token,\n      };\n      setUser(userInfo);\n\n      localStorage.setItem('user', JSON.stringify(userInfo));\n    } catch (err) {\n      setError(err);\n    }\n  };\n  return (\n    <>\n      {user.x && <Error errorMessage={error} />}\n      {error && <Error errorMessage={error} />}\n      {type === 'compact' && (\n        <>\n          <Input\n            onChange={(event) => setUsername(event.target.value)}\n            placeholder=\"потребител\"\n            name=\"username\"\n            value={username}\n            style={styles.InputCompact}\n          />\n          <Input\n            onChange={(event) => setPassword(event.target.value)}\n            placeholder=\"парола\"\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            style={styles.InputCompact}\n          />\n          <div style={styles.buttonCompact} onClick={login}>\n            <span style={styles.buttonCompact}>Вход</span>\n          </div>\n        </>\n      )}\n      {type === 'full' && (\n        <>\n          <Input\n            onChange={(event) => setUsername(event.target.value)}\n            placeholder=\"потребител\"\n            name=\"username\"\n            value={username}\n            style={styles.Input}\n          />\n          <Input\n            onChange={(event) => setPassword(event.target.value)}\n            placeholder=\"парола\"\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            style={styles.Input}\n          />\n          <div style={styles.button} onClick={login}>\n            <span style={styles.buttonText}>Вход</span>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import axios from 'axios';\n\nconst env1 = {\n  development: {\n    api: 'https://crlzp2fwh8.execute-api.eu-west-1.amazonaws.com/dev',\n  },\n  production: {\n    api: 'https://crlzp2fwh8.execute-api.eu-west-1.amazonaws.com/dev',\n  },\n};\n\nexport const env = env1[process.env.NODE_ENV];\nexport const get = async (id) => {\n  const result = await axios.get(`${env.api}${id}`);\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\n\nexport const heartbeat = async (token) => {\n  const result = await axios.get(`${env.api}/heartbeat`, {\n    headers: {\n      accesstoken: token,\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const post = async (table, json, token) => {\n  const result = await axios.post(`${env.api}/db/${table}`, JSON.stringify(json), {\n    headers: {\n      accesstoken: token,\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const postPublic = async (json) => {\n  const result = await axios.post(`${env.api}/dbpublic`, JSON.stringify(json), {\n    headers: {\n\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const put = async (json, token) => {\n  const result = await axios.post(`${env.api}/insert`, JSON.stringify(json), {\n    headers: {\n      accesstoken: token,\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const del = async (json, token) => {\n  const result = await axios.post(`${env.api}/del`, JSON.stringify(json), {\n    headers: {\n      accesstoken: token,\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const register = async (json) => {\n  const result = await axios.post(`${env.api}/register`, JSON.stringify(json), {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { Auth } from 'aws-amplify';\nimport { Input } from 'antd';\nimport { useRecoilState } from 'recoil';\nimport Error from '../Error';\nimport { navigation } from '../../utils/state';\nimport { register } from '../../utils/api';\n\nconst styles = {\n  Input: {\n    height: 40,\n    margin: '10px 0px',\n    padding: 7,\n  },\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  button: {\n    backgroundColor: 'rebeccapurple',\n    padding: '15px 7px',\n    cursor: 'pointer',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: 'white',\n  },\n};\nconst SignUp = () => {\n  const [nav, setNav] = useRecoilState(navigation);\n  const [state, setState] = useState({\n    username: '',\n    password: '',\n    email: '',\n    authCode: '',\n    stage: 0,\n    error: '',\n  });\n\n  useEffect(() => {\n    setNav('signup');\n  }, [setNav, nav]);\n  const handleUpdate = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const signUp = async () => {\n    const { username, password, email } = state;\n    try {\n      await Auth.signUp({\n        username,\n        password,\n        attributes: { email },\n      });\n      setState({ ...state, stage: 1, error: { name: 'Empty' } });\n    } catch (err) {\n      setState({ ...state, error: err });\n      console.log('error signing up...', err);\n    }\n  };\n\n  const confirmSignUp = async () => {\n    const { username, authCode, email } = state;\n    try {\n      await Auth.confirmSignUp(username, authCode);\n      await register({\n        username,\n        email,\n        tip: 'usersauth',\n        vreme: new Date().getTime(),\n      });\n      setState({ ...state, stage: 2, error: { name: 'Empty' } });\n    } catch (err) {\n      setState({ ...state, error: err });\n      console.log('error confirming signing up...', err);\n    }\n  };\n  return (\n    <div>\n      {state.stage === 0 && (\n        <div style={styles.formContainer}>\n          <h1>Регистрация</h1>\n          {state.error && <Error errorMessage={state.error} />}\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"потребител\"\n            name=\"username\"\n            value={state.username}\n            style={styles.Input}\n          />\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"парола\"\n            name=\"password\"\n            value={state.password}\n            type=\"password\"\n            style={styles.Input}\n          />\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"Email\"\n            name=\"email\"\n            value={state.email}\n            style={styles.Input}\n          />\n\n          <div style={styles.button} onClick={signUp}>\n            <span style={styles.buttonText}>Регистрация</span>\n          </div>\n        </div>\n      )}\n      {state.stage === 1 && (\n        <div style={styles.formContainer}>\n          <h1>Регистрация</h1>\n          {state.error && <Error errorMessage={state.error} />}\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"Authorization Code\"\n            name=\"authCode\"\n            value={state.authCode}\n            style={styles.Input}\n          />\n          <div style={styles.button} onClick={confirmSignUp}>\n            <span style={styles.buttonText}>Потвърди Регистрация</span>\n          </div>\n        </div>\n      )}\n\n      {state.stage === 2 && (\n        <>\n          Регистрация успешна ,\n          <a href=\"/app/login\">Вход</a>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React, { useState, useEffect } from 'react';\n\nimport { Auth } from 'aws-amplify';\nimport { Input } from 'antd';\nimport { useRecoilState } from 'recoil';\nimport Error from '../Error';\n\nimport { navigation } from '../../utils/state';\n\nconst styles = {\n  Input: {\n    height: 40,\n    margin: '10px 0px',\n    padding: 7,\n    width: '100%',\n  },\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  button: {\n    backgroundColor: 'rebeccapurple',\n    padding: '15px 7px',\n    cursor: 'pointer',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: 'white',\n  },\n};\nconst Forgot = () => {\n  const [nav, setNav] = useRecoilState(navigation);\n  const [state, setState] = useState({\n    username: '',\n    error: '',\n    validation: '',\n    password: '',\n    confirmPassword: '',\n    stage: 0,\n  });\n\n  useEffect(() => {\n    setNav('forgot');\n  }, [setNav, nav]);\n  const login = async () => {\n    try {\n      await Auth.forgotPassword(state.username);\n\n      setState({ ...state, stage: 1 });\n    } catch (err) {\n      setState({ ...state, error: err });\n    }\n  };\n  const submitCode = () => {\n    setState({ ...state, stage: 2 });\n  };\n  const changePassword = async () => {\n    try {\n      if (state.password === state.confirmPassword) {\n        await Auth.forgotPasswordSubmit(\n          state.username,\n          state.validation,\n          state.password,\n        );\n        setState({ ...state, stage: 3, error: { name: 'Empty' } });\n      } else {\n        setState({\n          ...state,\n          error: { name: 'PasswordNotMatch', message: \"Passwords don't Match\" },\n        });\n      }\n    } catch (err) {\n      setState({ ...state, error: err });\n    }\n  };\n  const handleUpdate = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });\n  };\n  return (\n    <div>\n      <h1>Забравена Парола</h1>\n      {state.error && <Error errorMessage={state.error} />}\n\n      {state.stage === 0 && (\n        <div style={styles.formContainer}>\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"username\"\n            name=\"username\"\n            value={state.username}\n            style={styles.Input}\n          />\n\n          <div\n            role=\"button\"\n            tabIndex={0}\n            style={styles.button}\n            onClick={login}\n            onKeyDown={login}\n          >\n            <span style={styles.buttonText}>Напред</span>\n          </div>\n        </div>\n      )}\n\n      {state.stage === 1 && (\n        <div>\n          <div>Провери E-mail-a си за потвърждаващ код</div>\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"потвърждаващ код\"\n            name=\"validation\"\n            value={state.validation}\n            style={styles.Input}\n          />\n          <div\n            role=\"button\"\n            tabIndex={0}\n            style={styles.button}\n            onClick={submitCode}\n            onKeyDown={submitCode}\n          >\n            <span style={styles.buttonText}>ОК</span>\n          </div>\n        </div>\n      )}\n\n      {state.stage === 2 && (\n        <div>\n          <Input\n            type=\"password\"\n            onChange={handleUpdate}\n            placeholder=\"нова парола\"\n            name=\"password\"\n            value={state.password}\n            style={styles.Input}\n          />\n          <br />\n          <Input\n            type=\"password\"\n            onChange={handleUpdate}\n            placeholder=\"потвърди паролата\"\n            name=\"confirmPassword\"\n            value={state.confirmPassword}\n            style={styles.Input}\n          />\n\n          <div\n            role=\"button\"\n            tabIndex={0}\n            href=\"/\"\n            style={styles.button}\n            onClick={changePassword}\n            onKeyDown={changePassword}\n          >\n            <span style={styles.buttonText}>Смени паролата</span>\n          </div>\n        </div>\n      )}\n      {state.stage === 3 && (\n        <>\n          <>\n            паролата сменена,\n            <a href=\"/app/login\">Вход</a>\n          </>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Forgot;\n","import React from 'react';\nimport { Card, Avatar } from 'antd';\n\nconst { Meta } = Card;\nconst Tweet = () => (\n  <Card\n    style={{ marginBottom: 5 }}\n\n  >\n    <Meta\n      avatar={\n        <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n           }\n      title=\"Card title\"\n      description=\"This is the description\"\n    />\n  </Card>\n);\nexport default Tweet;\n","import React, { useEffect } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRecoilState } from 'recoil';\n\nimport { navigation } from '../utils/state';\nimport Card from './Admin/Card';\n\nconst Welcome = ({ user }) => {\n  // const [fields, setFields] = useState({ Items: [] });\n\n  const [nav, setNav] = useRecoilState(navigation);\n\n  useEffect(() => {\n    setNav('home');\n  }, [setNav, nav]);\n\n  const { data, loading, error } = useQuery(gql`\n    {\n      Post(where: {}, order_by: { created_at: desc }, limit: 10) {\n        id\n        created_at\n        caption\n        user_id\n      }\n    }\n  `);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      {data.Post.map((item) => (<Card item={item} />))}\n    </>\n  );\n};\n\nexport default Welcome;\n","import React, { useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Button, Modal } from 'antd';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRecoilState } from 'recoil';\nimport { put } from '../../utils/api';\nimport { items, navigation, modal } from '../../utils/state';\n\nconst Form = ({ user, edit }) => {\n  const [fields, setFields] = useRecoilState(items);\n  const [open, setOpen] = useRecoilState(modal);\n  const {\n    control, errors, handleSubmit, setValue,\n  } = useForm();\n  useEffect(() => {\n    setValue('task', edit ? edit.task : '');\n  }, [edit, open, setValue]);\n  const onSubmit = async (data) => {\n    const newData = {\n      ...data,\n      vreme: edit ? edit.vreme : new Date().getTime(),\n      tip: 'test1-',\n    };\n    if (!open) {\n      setFields(\n        fields.Items\n          ? { Items: [newData, ...fields.Items] }\n          : { Items: [newData] },\n      );\n    } else {\n      const newProjects = fields.Items.map((p) => (p.vreme === edit.vreme ? newData : p));\n      setFields({ Items: newProjects });\n    }\n    await put(newData, user.token);\n    // await put({ ...newData, tip: 'test1-all' }, user.token);\n    setValue('task', '');\n\n    setOpen(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        as={(\n          <TextField\n            id=\"outlined-basic\"\n            error={!!errors.task}\n            label={errors.task ? 'task is required' : 'task'}\n            variant=\"outlined\"\n            style={{ width: '100%' }}\n          />\n        )}\n        defaultValue=\"\"\n        name=\"task\"\n        control={control}\n        rules={{ required: true }}\n      />\n      <Button type=\"primary\" htmlType=\"submit\">\n        Submit\n      </Button>\n      {' '}\n      {edit && <Button onClick={() => setOpen(false)}>Cancel</Button>}\n    </form>\n  );\n};\nconst Admin = ({ user }) => {\n  const [nav, setNav] = useRecoilState(navigation);\n  // const [fields, setFields] = useRecoilState(items);\n  const [open, setOpen] = useRecoilState(modal);\n\n  useEffect(() => {\n    setNav('admin');\n  }, [setNav, nav]);\n\n  const { data, loading, error } = useQuery(gql`\n    {\n      Post(\n        where: { wall: { follower_id: { _eq: \"rudix\" } } }\n        order_by: { created_at: desc }\n      ) {\n        id\n        created_at\n        caption\n        user_id\n      }\n    }\n  `);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return (\n    <div>\n      <h1>{user.username}</h1>\n      <Modal\n        title=\"Edit \"\n        visible={open}\n        // onOk={this.handleOk}\n        onCancel={() => {\n          setOpen(false);\n        }}\n      >\n        <Form user={user} />\n      </Modal>\n      <Form user={user} />\n      {JSON.stringify(data)}\n    </div>\n  );\n};\n// ver 1\nexport default Admin;\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom';\n\nimport { Menu, Switch as Switch1 } from 'antd';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { Amplify, Auth } from 'aws-amplify';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\n\nimport Layout from './components/layout';\nimport Login from './components/Login/Login';\nimport SignUp from './components/Login/SignUp';\nimport Forgot from './components/Login/Forgot';\nimport Welcome from './components/Welcome';\nimport Admin from './components/Admin/Admin';\nimport { loggedInUserData, navigation } from './utils/state';\nimport { heartbeat } from './utils/api';\nimport useLocalStorage from './utils/hooks';\n\nconst httpLink = new HttpLink({\n  uri: 'https://devopshasura.herokuapp.com/v1/graphql',\n});\nAmplify.configure({\n  aws_project_region: 'eu-west-1',\n  aws_cognito_identity_pool_id:\n    'eu-west-1:3f5f916d-2252-487f-99c0-7aa69115f973',\n  aws_cognito_region: 'eu-west-1',\n  aws_user_pools_id: 'eu-west-1_T6v05tjzh',\n  aws_user_pools_web_client_id: 'eqlretnsetkj5p57bqtandjqa',\n  oauth: {},\n});\n\nconst App = () => {\n  const [user, setUser] = useRecoilState(loggedInUserData);\n  const nav = useRecoilValue(navigation);\n\n  const [dark, setDark] = useLocalStorage('theme', false);\n  const client = new ApolloClient({\n    link: httpLink,\n    cache: new InMemoryCache(),\n  });\n  const logout = async () => {\n    await Auth.signOut();\n    localStorage.setItem('user', JSON.stringify({}));\n    setUser({});\n  };\n\n  useEffect(() => {\n    const prevStorage = localStorage.getItem('user');\n    const userStorage = prevStorage ? JSON.parse(prevStorage) : {};\n    setUser(userStorage);\n  }, [setUser]);\n\n  useEffect(() => {\n    const heartbeatGo = async () => {\n      if (user.token) {\n        const sess = await heartbeat(user.token);\n        if (sess.data.name === 'TokenExpiredError') {\n          const cognitoUser = await Auth.currentAuthenticatedUser();\n          const currentSession = await Auth.currentSession();\n          cognitoUser.refreshSession(\n            currentSession.refreshToken,\n            (err, session) => {\n              const userSession = {\n                ...user,\n                token: session.accessToken.jwtToken,\n              };\n              setUser(userSession);\n              localStorage.setItem('user', JSON.stringify(userSession));\n            },\n          );\n          // localStorage.setItem('user', JSON.stringify(userInfo));\n        }\n      }\n    };\n    heartbeatGo();\n\n    const interval = setInterval(async () => {\n      heartbeatGo();\n    }, 20000);\n    return () => clearInterval(interval);\n  }, [user, setUser]);\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className={dark ? 'dark' : 'white'}>\n          <div className=\"logo\">\n            <img src=\"/logo.png\" alt=\"\" />\n          </div>\n          <Menu selectedKeys={[nav]} mode=\"horizontal\">\n            <Menu.Item key=\"home\">\n              <Link to=\"/\">Начало</Link>\n            </Menu.Item>\n            {!user.username ? (\n              <>\n                <Menu.Item key=\"login\">\n                  <Link to=\"/app/login\">Вход</Link>\n                </Menu.Item>\n                <Menu.Item key=\"signup\">\n                  <Link to=\"/app/signup\">Регистрация</Link>\n                </Menu.Item>\n                <Menu.Item key=\"forgot\">\n                  <Link to=\"/app/forgot\">Забр. Парола</Link>\n                </Menu.Item>\n              </>\n            ) : (\n              <>\n                <Menu.Item key=\"logout\">\n                  <Link to=\"/\" onClick={() => logout()}>\n                    Изход\n                  </Link>\n                </Menu.Item>\n              </>\n            )}\n          </Menu>\n          <div className=\"switcher\">\n            <Switch1 defaultChecked={dark} onChange={() => setDark(!dark)} />\n          </div>\n          <Layout>\n            <Switch>\n              <Route path=\"/app/login\">\n                {!user.username ? (\n                  <>\n                    <h1>Вход</h1>\n                    <Login type=\"full\" />\n                  </>\n                ) : (\n                  <Redirect to=\"/\" />\n                )}\n              </Route>\n              <Route path=\"/app/forgot\">\n                <Forgot />\n              </Route>\n              <Route path=\"/app/signup\">\n                <SignUp />\n              </Route>\n\n              <Route path=\"/\">\n                {user.username ? (\n                  <Admin user={user} />\n                ) : (\n                  <Welcome menu=\"home\" />\n                )}\n              </Route>\n            </Switch>\n          </Layout>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import { useState } from 'react';\n\n// export default const useLocalStorage = (key, initialValue) => {\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { RecoilRoot } from 'recoil';\n\nimport App from './App';\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}