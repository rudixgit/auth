{"version":3,"sources":["components/layout.js","utils/state.js","components/Error.js","components/Login/Login.js","utils/api.js","components/Login/SignUp.js","components/Login/Forgot.js","components/Admin/components/Follow.js","components/Admin/components/Card.js","components/Welcome.js","components/Profile.js","components/Admin/PublicFeed.js","components/Admin/Admin.js","App.js","utils/hooks.js","index.js"],"names":["Layout","children","Helmet","title","meta","name","content","lang","style","margin","maxWidth","padding","paddingTop","loggedInUserData","atom","key","default","sub","email_verified","phone_number_verified","email","username","token","navigation","rows","translated","UserNotFoundException","AuthError","CodeMismatchException","NotAuthorizedException","UsernameExistsException","PasswordNotMatch","InvalidParameterException","Empty","Error","props","Object","entries","map","val","description","message","type","styles","Input","height","width","formContainer","display","flexDirection","button","backgroundColor","cursor","textAlign","marginBottom","buttonText","color","Login","useRecoilState","user","setUser","useState","setUsername","password","setPassword","error","setError","nav","setNav","useEffect","login","a","Auth","signIn","currentAuthenticatedUser","user1","currentSession","session","userInfo","attributes","accessToken","jwtToken","refreshtoken","refreshToken","localStorage","setItem","JSON","stringify","x","errorMessage","onChange","event","target","value","placeholder","InputCompact","buttonCompact","onClick","env","api","heartbeat","axios","get","headers","accesstoken","result","Promise","resolve","post","table","json","register","SignUp","authCode","stage","state","setState","handleUpdate","signUp","console","log","confirmSignUp","tip","vreme","Date","getTime","href","Forgot","validation","confirmPassword","forgotPassword","submitCode","changePassword","forgotPasswordSubmit","role","tabIndex","onKeyDown","Follow","active","setActive","shape","float","alert","following_id","disabled","formatter","buildFormatter","frenchStrings","Meta","Card","Search","Tweet","item","showfollow","comment","setComment","user_id","date","created_at","tweet","comm","id","author","enterButton","size","onSearch","post_id","Welcome","useQuery","gql","data","loading","Profile","useParams","PublicFeed","following","includes","Admin","myitems","setMyitems","useForm","control","errors","handleSubmit","setValue","onSubmit","toString","as","TextField","label","variant","defaultValue","rules","required","htmlType","myWall","sort","b","reverse","httpLink","HttpLink","uri","Amplify","configure","aws_project_region","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","oauth","App","useRecoilValue","initialValue","window","getItem","parse","storedValue","setStoredValue","valueToStore","Function","useLocalStorage","dark","setDark","client","ApolloClient","link","cache","InMemoryCache","logout","signOut","prevStorage","userStorage","heartbeatGo","cognitoUser","refreshSession","err","userSession","interval","setInterval","clearInterval","className","src","alt","selectedKeys","mode","Item","to","defaultChecked","path","menu","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b64720f2.chunk.js","sourcesContent":["import React from 'react';\n\nimport Helmet from 'react-helmet';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport '../css/main.css';\n\nconst Layout = ({ children }) => (\n  <>\n    <Helmet\n      title=\"churulik\"\n      meta={[\n        { name: 'description', content: 'Sample' },\n        { name: 'keywords', content: 'sample, something' },\n      ]}\n    >\n      <html lang=\"en\" />\n    </Helmet>\n\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '0px 1.0875rem 1.45rem',\n        paddingTop: 0,\n      }}\n    >\n      {children}\n    </div>\n  </>\n);\n\nexport default Layout;\n","import { atom } from 'recoil';\n\nexport const loggedInUserData = atom({\n  key: 'loggedInUser',\n  default: {\n    sub: null,\n    email_verified: null,\n    phone_number_verified: null,\n    email: null,\n    username: null,\n    token: null,\n  },\n});\n\nexport const navigation = atom({\n  key: 'navigation',\n  default: 'home',\n});\n\nexport const items = atom({\n  key: 'items',\n  default: { rows: [] },\n});\nexport const modal = atom({\n  key: 'modal',\n  default: false,\n});\n","import React from 'react';\nimport { Alert } from 'antd';\n\nconst translated = {\n  UserNotFoundException: 'потребителя не съществува',\n  AuthError: 'потребител и парола не могат да бъдат празни',\n  CodeMismatchException: 'невалиден код, моля пробвайте отново',\n  NotAuthorizedException: 'потребител или парола невалидни',\n  UsernameExistsException: 'потребителя не съществува',\n  PasswordNotMatch: 'паролите не пасват',\n  InvalidParameterException: 'паролата трябва да е поне 6 символа',\n  Empty: '',\n};\n\nconst Error = (props) => (\n  <div>\n    {Object.entries(props).map(([err, val]) => val.name !== 'Empty' && (\n    <Alert\n      description={\n          translated[val.name]\n            ? translated[val.name]\n            : `${val.message}-${val.name}`\n        }\n      type=\"error\"\n    />\n    ))}\n  </div>\n);\n\nexport default Error;\n","import React, { useState, useEffect } from 'react';\n\nimport { Auth } from 'aws-amplify';\nimport { useRecoilState } from 'recoil';\nimport { Input } from 'antd';\n\nimport { loggedInUserData, navigation } from '../../utils/state';\nimport Error from '../Error';\n\n//\n\nconst styles = {\n  Input: {\n    height: 40,\n    margin: '10px 0px',\n    padding: 7,\n    width: '100%',\n  },\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  button: {\n    backgroundColor: 'rebeccapurple',\n    padding: '15px 7px',\n    cursor: 'pointer',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: 'white',\n  },\n};\nconst Login = ({ type }) => {\n  const [user, setUser] = useRecoilState(loggedInUserData);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const [nav, setNav] = useRecoilState(navigation);\n  useEffect(() => {\n    setNav('login');\n  }, [setNav, nav]);\n  const login = async () => {\n    try {\n      await Auth.signIn(username, password);\n      const user1 = await Auth.currentAuthenticatedUser();\n      const session = await Auth.currentSession();\n\n      const userInfo = {\n        ...user1.attributes,\n        username: user1.username,\n        token: session.accessToken.jwtToken,\n        refreshtoken: session.refreshToken.token,\n      };\n      setUser(userInfo);\n\n      localStorage.setItem('user', JSON.stringify(userInfo));\n    } catch (err) {\n      setError(err);\n    }\n  };\n  return (\n    <>\n      {user.x && <Error errorMessage={error} />}\n      {error && <Error errorMessage={error} />}\n      {type === 'compact' && (\n        <>\n          <Input\n            onChange={(event) => setUsername(event.target.value)}\n            placeholder=\"потребител\"\n            name=\"username\"\n            value={username}\n            style={styles.InputCompact}\n          />\n          <Input\n            onChange={(event) => setPassword(event.target.value)}\n            placeholder=\"парола\"\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            style={styles.InputCompact}\n          />\n          <div style={styles.buttonCompact} onClick={login}>\n            <span style={styles.buttonCompact}>Вход</span>\n          </div>\n        </>\n      )}\n      {type === 'full' && (\n        <>\n          <Input\n            onChange={(event) => setUsername(event.target.value)}\n            placeholder=\"потребител\"\n            name=\"username\"\n            value={username}\n            style={styles.Input}\n          />\n          <Input\n            onChange={(event) => setPassword(event.target.value)}\n            placeholder=\"парола\"\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            style={styles.Input}\n          />\n          <div style={styles.button} onClick={login}>\n            <span style={styles.buttonText}>Вход</span>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","import axios from 'axios';\n\nconst env1 = {\n  development: {\n    api: 'https://crlzp2fwh8.execute-api.eu-west-1.amazonaws.com/dev',\n  },\n  production: {\n    api: 'https://crlzp2fwh8.execute-api.eu-west-1.amazonaws.com/dev',\n  },\n};\n\nexport const env = env1[process.env.NODE_ENV];\nexport const get = async (id) => {\n  const result = await axios.get(`${env.api}${id}`);\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\n\nexport const heartbeat = async (token) => {\n  const result = await axios.get(`${env.api}/heartbeat`, {\n    headers: {\n      accesstoken: token,\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const post = async (table, json, token) => {\n  const result = await axios.post(`${env.api}/db/${table}`, JSON.stringify(json), {\n    headers: {\n      accesstoken: token,\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const postPublic = async (json) => {\n  const result = await axios.post(`${env.api}/dbpublic`, JSON.stringify(json), {\n    headers: {\n\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const put = async (json, token) => {\n  const result = await axios.post(`${env.api}/insert`, JSON.stringify(json), {\n    headers: {\n      accesstoken: token,\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const del = async (json, token) => {\n  const result = await axios.post(`${env.api}/del`, JSON.stringify(json), {\n    headers: {\n      accesstoken: token,\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\nexport const register = async (json) => {\n  const result = await axios.post(`${env.api}/register`, JSON.stringify(json), {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { Auth } from 'aws-amplify';\nimport { Input } from 'antd';\nimport { useRecoilState } from 'recoil';\nimport Error from '../Error';\nimport { navigation } from '../../utils/state';\nimport { register } from '../../utils/api';\n\nconst styles = {\n  Input: {\n    height: 40,\n    margin: '10px 0px',\n    padding: 7,\n  },\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  button: {\n    backgroundColor: 'rebeccapurple',\n    padding: '15px 7px',\n    cursor: 'pointer',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: 'white',\n  },\n};\nconst SignUp = () => {\n  const [nav, setNav] = useRecoilState(navigation);\n  const [state, setState] = useState({\n    username: '',\n    password: '',\n    email: '',\n    authCode: '',\n    stage: 0,\n    error: '',\n  });\n\n  useEffect(() => {\n    setNav('signup');\n  }, [setNav, nav]);\n  const handleUpdate = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const signUp = async () => {\n    const { username, password, email } = state;\n    try {\n      await Auth.signUp({\n        username,\n        password,\n        attributes: { email },\n      });\n      setState({ ...state, stage: 1, error: { name: 'Empty' } });\n    } catch (err) {\n      setState({ ...state, error: err });\n      console.log('error signing up...', err);\n    }\n  };\n\n  const confirmSignUp = async () => {\n    const { username, authCode, email } = state;\n    try {\n      await Auth.confirmSignUp(username, authCode);\n      await register({\n        username,\n        email,\n        tip: 'usersauth',\n        vreme: new Date().getTime(),\n      });\n      setState({ ...state, stage: 2, error: { name: 'Empty' } });\n    } catch (err) {\n      setState({ ...state, error: err });\n      console.log('error confirming signing up...', err);\n    }\n  };\n  return (\n    <div>\n      {state.stage === 0 && (\n        <div style={styles.formContainer}>\n          <h1>Регистрация</h1>\n          {state.error && <Error errorMessage={state.error} />}\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"потребител\"\n            name=\"username\"\n            value={state.username}\n            style={styles.Input}\n          />\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"парола\"\n            name=\"password\"\n            value={state.password}\n            type=\"password\"\n            style={styles.Input}\n          />\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"Email\"\n            name=\"email\"\n            value={state.email}\n            style={styles.Input}\n          />\n\n          <div style={styles.button} onClick={signUp}>\n            <span style={styles.buttonText}>Регистрация</span>\n          </div>\n        </div>\n      )}\n      {state.stage === 1 && (\n        <div style={styles.formContainer}>\n          <h1>Регистрация</h1>\n          {state.error && <Error errorMessage={state.error} />}\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"Authorization Code\"\n            name=\"authCode\"\n            value={state.authCode}\n            style={styles.Input}\n          />\n          <div style={styles.button} onClick={confirmSignUp}>\n            <span style={styles.buttonText}>Потвърди Регистрация</span>\n          </div>\n        </div>\n      )}\n\n      {state.stage === 2 && (\n        <>\n          Регистрация успешна ,\n          <a href=\"/app/login\">Вход</a>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React, { useState, useEffect } from 'react';\n\nimport { Auth } from 'aws-amplify';\nimport { Input } from 'antd';\nimport { useRecoilState } from 'recoil';\nimport Error from '../Error';\n\nimport { navigation } from '../../utils/state';\n\nconst styles = {\n  Input: {\n    height: 40,\n    margin: '10px 0px',\n    padding: 7,\n    width: '100%',\n  },\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  button: {\n    backgroundColor: 'rebeccapurple',\n    padding: '15px 7px',\n    cursor: 'pointer',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: 'white',\n  },\n};\nconst Forgot = () => {\n  const [nav, setNav] = useRecoilState(navigation);\n  const [state, setState] = useState({\n    username: '',\n    error: '',\n    validation: '',\n    password: '',\n    confirmPassword: '',\n    stage: 0,\n  });\n\n  useEffect(() => {\n    setNav('forgot');\n  }, [setNav, nav]);\n  const login = async () => {\n    try {\n      await Auth.forgotPassword(state.username);\n\n      setState({ ...state, stage: 1 });\n    } catch (err) {\n      setState({ ...state, error: err });\n    }\n  };\n  const submitCode = () => {\n    setState({ ...state, stage: 2 });\n  };\n  const changePassword = async () => {\n    try {\n      if (state.password === state.confirmPassword) {\n        await Auth.forgotPasswordSubmit(\n          state.username,\n          state.validation,\n          state.password,\n        );\n        setState({ ...state, stage: 3, error: { name: 'Empty' } });\n      } else {\n        setState({\n          ...state,\n          error: { name: 'PasswordNotMatch', message: \"Passwords don't Match\" },\n        });\n      }\n    } catch (err) {\n      setState({ ...state, error: err });\n    }\n  };\n  const handleUpdate = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });\n  };\n  return (\n    <div>\n      <h1>Забравена Парола</h1>\n      {state.error && <Error errorMessage={state.error} />}\n\n      {state.stage === 0 && (\n        <div style={styles.formContainer}>\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"username\"\n            name=\"username\"\n            value={state.username}\n            style={styles.Input}\n          />\n\n          <div\n            role=\"button\"\n            tabIndex={0}\n            style={styles.button}\n            onClick={login}\n            onKeyDown={login}\n          >\n            <span style={styles.buttonText}>Напред</span>\n          </div>\n        </div>\n      )}\n\n      {state.stage === 1 && (\n        <div>\n          <div>Провери E-mail-a си за потвърждаващ код</div>\n          <Input\n            onChange={handleUpdate}\n            placeholder=\"потвърждаващ код\"\n            name=\"validation\"\n            value={state.validation}\n            style={styles.Input}\n          />\n          <div\n            role=\"button\"\n            tabIndex={0}\n            style={styles.button}\n            onClick={submitCode}\n            onKeyDown={submitCode}\n          >\n            <span style={styles.buttonText}>ОК</span>\n          </div>\n        </div>\n      )}\n\n      {state.stage === 2 && (\n        <div>\n          <Input\n            type=\"password\"\n            onChange={handleUpdate}\n            placeholder=\"нова парола\"\n            name=\"password\"\n            value={state.password}\n            style={styles.Input}\n          />\n          <br />\n          <Input\n            type=\"password\"\n            onChange={handleUpdate}\n            placeholder=\"потвърди паролата\"\n            name=\"confirmPassword\"\n            value={state.confirmPassword}\n            style={styles.Input}\n          />\n\n          <div\n            role=\"button\"\n            tabIndex={0}\n            href=\"/\"\n            style={styles.button}\n            onClick={changePassword}\n            onKeyDown={changePassword}\n          >\n            <span style={styles.buttonText}>Смени паролата</span>\n          </div>\n        </div>\n      )}\n      {state.stage === 3 && (\n        <>\n          <>\n            паролата сменена,\n            <a href=\"/app/login\">Вход</a>\n          </>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Forgot;\n","import React, { useState } from 'react';\n// import { gql } from 'apollo-boost';\n// import { useQuery } from '@apollo/react-hooks';\n\nimport { Button } from 'antd';\nimport { post } from '../../../utils/api';\n\nconst Follow = ({ user, username }) => {\n  const [active, setActive] = useState(false);\n  const prez = () => {\n    alert(username);\n    setActive(!active);\n    post(\n      'Follow',\n      {\n        following_id: username,\n      },\n      user.token,\n    );\n  };\n  return (\n    <>\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        style={{ float: 'right' }}\n        onClick={() => prez()}\n        disabled={active}\n      >\n        Следвай!\n      </Button>\n    </>\n  );\n};\nexport default Follow;\n","import React, { useState } from 'react';\nimport { Card, Comment, Input } from 'antd';\nimport TimeAgo from 'react-timeago';\nimport frenchStrings from 'react-timeago/lib/language-strings/bg';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\nimport { post } from '../../../utils/api';\nimport Follow from './Follow';\n\nconst formatter = buildFormatter(frenchStrings);\n\nconst { Meta } = Card;\nconst { Search } = Input;\n\nconst Tweet = ({ item, user, showfollow }) => {\n  const [comment, setComment] = useState(item.comment || []);\n  const onSearch = (value) => {\n    const val = { comment: value };\n    setComment([...comment, val]);\n    post(\n      'Comment',\n      {\n        post_id: item.id,\n        comment: value,\n      },\n      user.token,\n    );\n  };\n  return (\n    <>\n      <Card style={{ marginBottom: 5 }}>\n        <Meta\n          title={(\n            <>\n              <a href={`/${item.user_id}`}>\n                {`@${item.user_id}`}\n                {' '}\n              </a>\n              <small>\n                <TimeAgo date={item.created_at} formatter={formatter} />\n              </small>\n              {showfollow && <Follow user={user} username={item.user_id} />}\n            </>\n          )}\n          description={item.tweet}\n        />\n        {comment[0]\n          && comment.map((comm) => (\n            <Comment\n              key={comm.id}\n              author={comm.user_id}\n              content={<p>{comm.comment}</p>}\n            />\n          ))}\n        {user && (\n          <Search\n            placeholder=\"Коментар\"\n            enterButton=\"Чурулик\"\n            size=\"medium\"\n            onSearch={onSearch}\n          />\n        )}\n      </Card>\n    </>\n  );\n};\nexport default Tweet;\n","import React, { useEffect } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRecoilState } from 'recoil';\n\nimport { navigation } from '../utils/state';\nimport Card from './Admin/components/Card';\n\nconst Welcome = () => {\n  // const [fields, setFields] = useState({ Items: [] });\n\n  const [nav, setNav] = useRecoilState(navigation);\n\n  useEffect(() => {\n    setNav('home');\n  }, [setNav, nav]);\n\n  const { data, loading, error } = useQuery(gql`\n    {\n      Tweet(order_by: { id: desc }, limit: 10) {\n        user_id\n        tweet\n        created_at\n        id\n        comment {\n          id\n          comment\n          user_id\n        }\n      }\n    }\n  `);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return (\n    <>\n      {data.Tweet.map((item) => (\n        <Card key={item.id} item={item} />\n      ))}\n    </>\n  );\n};\n\nexport default Welcome;\n","import React, { } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport {\n  useParams,\n} from 'react-router-dom';\n\nimport Card from './Admin/components/Card';\n\nconst Profile = ({ user }) => {\n  // const [fields, setFields] = useState({ Items: [] });\n  const { id } = useParams();\n\n  const { data, loading, error } = useQuery(gql`\n    {\n      Tweet(where: { user_id: { _eq: \"${id}\" } }, order_by: { id: desc },limit:100) {\n        tweet\n        created_at\n        id\n        user_id\n      }\n    }\n  `);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <h1>{id}</h1>\n      {data.Tweet[0] ? (\n        data.Tweet.map((item) => <Card key={item.id} item={item} user={user} />)\n      ) : (\n        <>Потребителя не съществува</>\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport Card from './components/Card';\n\nconst PublicFeed = ({ user, following }) => {\n  const { data, loading, error } = useQuery(gql`\n    {\n      Tweet(where: {}, order_by: { id: desc }, limit: 100) {\n        id\n        user_id\n        tweet\n        created_at\n        comment {\n          id\n          comment\n          user_id\n        }\n      }\n    }\n  `);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      {data.Tweet.map((item) => (\n        <Card key={item.id} item={item} user={user} showfollow={![...following, user.username].includes(item.user_id)} />\n      ))}\n    </>\n  );\n};\nexport default PublicFeed;\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Button } from 'antd';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport Card from './components/Card';\nimport PublicFeed from './PublicFeed';\nimport { post } from '../../utils/api';\n\nconst Admin = ({ user }) => {\n  const [myitems, setMyitems] = useState([]);\n  const {\n    control, errors, handleSubmit, setValue,\n  } = useForm();\n  const onSubmit = async ({ tweet }) => {\n    setValue('tweet', '');\n    post(\n      'Tweet',\n      {\n        tweet,\n      },\n      user.token,\n    );\n    setMyitems([...myitems, { tweet, id: new Date().getTime().toString(), user_id: user.username }]);\n  };\n  const { data, loading, error } = useQuery(gql`\n    {\n        Tweet(where: {wall: {user_id: {_eq: \"${user.username}\"}}}, order_by: {created_at: desc}, limit: 100) {\n        id\n        user_id\n        created_at\n        tweet\n        comment {\n          id\n          comment\n          user_id\n        }\n      }\n      myWall: Tweet(order_by: {created_at: desc}, where: {user_id: {_eq: \"${user.username}\"}}, limit: 100) {\n        id\n        user_id\n        created_at\n        tweet\n        comment {\n          id\n          comment\n          user_id\n        }\n      }\n      Follow(where: {user_id: {_eq: \"${user.username}\"}}) {\n        following_id\n      }\n    }\n  `);\n\n  if (loading) return 'Зареждам...';\n  if (error) return `Зареждам...${error}`;\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Controller\n          as={(\n            <TextField\n              id=\"outlined-basic\"\n              error={!!errors.tweet}\n              label={\n                errors.tweet\n                  ? `какво мислите ${user.username}?`\n                  : `какво мислите ${user.username}?`\n              }\n              variant=\"outlined\"\n              style={{ width: '80%' }}\n            />\n          )}\n          defaultValue=\"\"\n          name=\"tweet\"\n          control={control}\n          rules={{ required: true }}\n        />\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          style={{ width: '20%', height: 56 }}\n        >\n          Чурулик!\n        </Button>\n      </form>\n      {JSON.stringify()}\n      {data.Tweet[0] && <h1>Стена</h1>}\n      {myitems.map((item) => (\n        <Card key={item.id} item={item} user={user} />\n      ))}\n      {[...data.Tweet, ...data.myWall]\n        .sort((a, b) => a.id - b.id)\n        .reverse()\n        .map((item) => (\n          <Card key={item.id} item={item} user={user} />\n        ))}\n\n      <>\n        <h1>Публични</h1>\n        <PublicFeed\n          user={user}\n          following={data.Follow.map((item) => item.following_id)}\n        />\n      </>\n    </>\n  );\n};\n\nexport default Admin;\n","import React, { useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom';\n\nimport { Menu, Switch as Switch1 } from 'antd';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { Amplify, Auth } from 'aws-amplify';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\n\nimport Layout from './components/layout';\nimport Login from './components/Login/Login';\nimport SignUp from './components/Login/SignUp';\nimport Forgot from './components/Login/Forgot';\nimport Welcome from './components/Welcome';\nimport Profile from './components/Profile';\nimport Admin from './components/Admin/Admin';\nimport { loggedInUserData, navigation } from './utils/state';\nimport { heartbeat } from './utils/api';\nimport useLocalStorage from './utils/hooks';\n\nconst httpLink = new HttpLink({\n  uri: 'https://rudixdb.herokuapp.com/v1/graphql',\n});\nAmplify.configure({\n  aws_project_region: 'eu-west-1',\n  aws_cognito_identity_pool_id:\n    'eu-west-1:3f5f916d-2252-487f-99c0-7aa69115f973',\n  aws_cognito_region: 'eu-west-1',\n  aws_user_pools_id: 'eu-west-1_T6v05tjzh',\n  aws_user_pools_web_client_id: 'eqlretnsetkj5p57bqtandjqa',\n  oauth: {},\n});\n\nconst App = () => {\n  const [user, setUser] = useRecoilState(loggedInUserData);\n\n  const nav = useRecoilValue(navigation);\n\n  const [dark, setDark] = useLocalStorage('theme', false);\n  const client = new ApolloClient({\n    link: httpLink,\n    cache: new InMemoryCache(),\n  });\n  const logout = async () => {\n    await Auth.signOut();\n    localStorage.setItem('user', JSON.stringify({}));\n    setUser({});\n  };\n\n  useEffect(() => {\n    const prevStorage = localStorage.getItem('user');\n    const userStorage = prevStorage ? JSON.parse(prevStorage) : {};\n    setUser(userStorage);\n  }, [setUser]);\n\n  useEffect(() => {\n    const heartbeatGo = async () => {\n      if (user.token) {\n        const sess = await heartbeat(user.token);\n        if (sess.data.name === 'TokenExpiredError') {\n          const cognitoUser = await Auth.currentAuthenticatedUser();\n          const currentSession = await Auth.currentSession();\n          cognitoUser.refreshSession(\n            currentSession.refreshToken,\n            (err, session) => {\n              const userSession = {\n                ...user,\n                token: session.accessToken.jwtToken,\n              };\n              setUser(userSession);\n              localStorage.setItem('user', JSON.stringify(userSession));\n            },\n          );\n          // localStorage.setItem('user', JSON.stringify(userInfo));\n        }\n      }\n    };\n    heartbeatGo();\n\n    const interval = setInterval(async () => {\n      heartbeatGo();\n    }, 20000);\n    return () => clearInterval(interval);\n  }, [user, setUser]);\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className={dark ? 'dark' : 'white'}>\n          <div className=\"logo\">\n            <img src=\"/logo.png\" alt=\"\" />\n          </div>\n          <Menu selectedKeys={[nav]} mode=\"horizontal\">\n            <Menu.Item key=\"home\">\n              <Link to=\"/\">Начало</Link>\n            </Menu.Item>\n            {!user.username ? (\n              <>\n                <Menu.Item key=\"login\">\n                  <Link to=\"/app/login\">Вход</Link>\n                </Menu.Item>\n                <Menu.Item key=\"signup\">\n                  <Link to=\"/app/signup\">Регистрация</Link>\n                </Menu.Item>\n                <Menu.Item key=\"forgot\">\n                  <Link to=\"/app/forgot\">Забр. Парола</Link>\n                </Menu.Item>\n              </>\n            ) : (\n              <>\n                <Menu.Item key=\"logout\">\n                  <Link to=\"/\" onClick={() => logout()}>\n                    Изход\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"profile\">\n                  <Link to=\"/app/profile\">Профил</Link>\n                </Menu.Item>\n              </>\n            )}\n          </Menu>\n          <div className=\"switcher\">\n            <Switch1 defaultChecked={dark} onChange={() => setDark(!dark)} />\n          </div>\n          <Layout>\n            <Switch>\n              <Route path=\"/app/login\">\n                {!user.username ? (\n                  <>\n                    <h1>Вход</h1>\n                    <Login type=\"full\" />\n                  </>\n                ) : (\n                  <Redirect to=\"/\" />\n                )}\n              </Route>\n              <Route path=\"/app/forgot\">\n                <Forgot />\n              </Route>\n              <Route path=\"/app/signup\">\n                <SignUp />\n              </Route>\n              <Route path=\"/:id\">\n                {user.username ? <Profile user={user} /> : <Profile />}\n              </Route>\n              <Route path=\"/\">\n                {user.username ? (\n                  <Admin user={user} />\n                ) : (\n                  <Welcome menu=\"home\" />\n                )}\n              </Route>\n            </Switch>\n          </Layout>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import { useState } from 'react';\n\n// export default const useLocalStorage = (key, initialValue) => {\nexport default function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { RecoilRoot } from 'recoil';\n\nimport App from './App';\n\nReactDOM.render(\n  <RecoilRoot>\n    <App />\n  </RecoilRoot>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}